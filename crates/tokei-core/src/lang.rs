// generated by scripts/genLang.cjs
use std::ops::Deref;
use tokei::LanguageType;
#[derive(Debug, Clone)]
pub struct LangType(LanguageType);
impl Deref for LangType {
  type Target = LanguageType;

  fn deref(&self) -> &Self::Target {
    &self.0
  }
}

impl From<&str> for LangType {
  fn from(item: &str) -> Self {
    match item {
      "ABNF" => LangType(LanguageType::ABNF),
      "Abap" => LangType(LanguageType::Abap),
      "ActionScript" => LangType(LanguageType::ActionScript),
      "Ada" => LangType(LanguageType::Ada),
      "Agda" => LangType(LanguageType::Agda),
      "Alex" => LangType(LanguageType::Alex),
      "Alloy" => LangType(LanguageType::Alloy),
      "Arduino" => LangType(LanguageType::Arduino),
      "AsciiDoc" => LangType(LanguageType::AsciiDoc),
      "Asn1" => LangType(LanguageType::Asn1),
      "Asp" => LangType(LanguageType::Asp),
      "AspNet" => LangType(LanguageType::AspNet),
      "Assembly" => LangType(LanguageType::Assembly),
      "AssemblyGAS" => LangType(LanguageType::AssemblyGAS),
      "AutoHotKey" => LangType(LanguageType::AutoHotKey),
      "Autoconf" => LangType(LanguageType::Autoconf),
      "Automake" => LangType(LanguageType::Automake),
      "Bash" => LangType(LanguageType::Bash),
      "Batch" => LangType(LanguageType::Batch),
      "Bean" => LangType(LanguageType::Bean),
      "BrightScript" => LangType(LanguageType::BrightScript),
      "C" => LangType(LanguageType::C),
      "CHeader" => LangType(LanguageType::CHeader),
      "CMake" => LangType(LanguageType::CMake),
      "CSharp" => LangType(LanguageType::CSharp),
      "CShell" => LangType(LanguageType::CShell),
      "Cabal" => LangType(LanguageType::Cabal),
      "Cassius" => LangType(LanguageType::Cassius),
      "Ceylon" => LangType(LanguageType::Ceylon),
      "Clojure" => LangType(LanguageType::Clojure),
      "ClojureC" => LangType(LanguageType::ClojureC),
      "ClojureScript" => LangType(LanguageType::ClojureScript),
      "Cobol" => LangType(LanguageType::Cobol),
      "CodeQL" => LangType(LanguageType::CodeQL),
      "CoffeeScript" => LangType(LanguageType::CoffeeScript),
      "Cogent" => LangType(LanguageType::Cogent),
      "ColdFusion" => LangType(LanguageType::ColdFusion),
      "ColdFusionScript" => LangType(LanguageType::ColdFusionScript),
      "Coq" => LangType(LanguageType::Coq),
      "Cpp" => LangType(LanguageType::Cpp),
      "CppHeader" => LangType(LanguageType::CppHeader),
      "Crystal" => LangType(LanguageType::Crystal),
      "Css" => LangType(LanguageType::Css),
      "D" => LangType(LanguageType::D),
      "Daml" => LangType(LanguageType::Daml),
      "Dart" => LangType(LanguageType::Dart),
      "DeviceTree" => LangType(LanguageType::DeviceTree),
      "Dhall" => LangType(LanguageType::Dhall),
      "Dockerfile" => LangType(LanguageType::Dockerfile),
      "DotNetResource" => LangType(LanguageType::DotNetResource),
      "DreamMaker" => LangType(LanguageType::DreamMaker),
      "Dust" => LangType(LanguageType::Dust),
      "Edn" => LangType(LanguageType::Edn),
      "Elisp" => LangType(LanguageType::Elisp),
      "Elixir" => LangType(LanguageType::Elixir),
      "Elm" => LangType(LanguageType::Elm),
      "Elvish" => LangType(LanguageType::Elvish),
      "EmacsDevEnv" => LangType(LanguageType::EmacsDevEnv),
      "Emojicode" => LangType(LanguageType::Emojicode),
      "Erlang" => LangType(LanguageType::Erlang),
      "FEN" => LangType(LanguageType::FEN),
      "FSharp" => LangType(LanguageType::FSharp),
      "Fish" => LangType(LanguageType::Fish),
      "FlatBuffers" => LangType(LanguageType::FlatBuffers),
      "Forth" => LangType(LanguageType::Forth),
      "FortranLegacy" => LangType(LanguageType::FortranLegacy),
      "FortranModern" => LangType(LanguageType::FortranModern),
      "FreeMarker" => LangType(LanguageType::FreeMarker),
      "Fstar" => LangType(LanguageType::Fstar),
      "Futhark" => LangType(LanguageType::Futhark),
      "GDB" => LangType(LanguageType::GDB),
      "GdScript" => LangType(LanguageType::GdScript),
      "Gherkin" => LangType(LanguageType::Gherkin),
      "Gleam" => LangType(LanguageType::Gleam),
      "Glsl" => LangType(LanguageType::Glsl),
      "Go" => LangType(LanguageType::Go),
      "Gohtml" => LangType(LanguageType::Gohtml),
      "Graphql" => LangType(LanguageType::Graphql),
      "Groovy" => LangType(LanguageType::Groovy),
      "Gwion" => LangType(LanguageType::Gwion),
      "Hamlet" => LangType(LanguageType::Hamlet),
      "Handlebars" => LangType(LanguageType::Handlebars),
      "Happy" => LangType(LanguageType::Happy),
      "Haskell" => LangType(LanguageType::Haskell),
      "Haxe" => LangType(LanguageType::Haxe),
      "Hcl" => LangType(LanguageType::Hcl),
      "Headache" => LangType(LanguageType::Headache),
      "Hex" => LangType(LanguageType::Hex),
      "Hlsl" => LangType(LanguageType::Hlsl),
      "HolyC" => LangType(LanguageType::HolyC),
      "Html" => LangType(LanguageType::Html),
      "Idris" => LangType(LanguageType::Idris),
      "Ini" => LangType(LanguageType::Ini),
      "IntelHex" => LangType(LanguageType::IntelHex),
      "Isabelle" => LangType(LanguageType::Isabelle),
      "Jai" => LangType(LanguageType::Jai),
      "Java" => LangType(LanguageType::Java),
      "JavaScript" => LangType(LanguageType::JavaScript),
      "Json" => LangType(LanguageType::Json),
      "Jsonnet" => LangType(LanguageType::Jsonnet),
      "Jsx" => LangType(LanguageType::Jsx),
      "Julia" => LangType(LanguageType::Julia),
      "Julius" => LangType(LanguageType::Julius),
      "Jupyter" => LangType(LanguageType::Jupyter),
      "K" => LangType(LanguageType::K),
      "KakouneScript" => LangType(LanguageType::KakouneScript),
      "Kotlin" => LangType(LanguageType::Kotlin),
      "LLVM" => LangType(LanguageType::LLVM),
      "Lean" => LangType(LanguageType::Lean),
      "Less" => LangType(LanguageType::Less),
      "LinkerScript" => LangType(LanguageType::LinkerScript),
      "Liquid" => LangType(LanguageType::Liquid),
      "Lisp" => LangType(LanguageType::Lisp),
      "LiveScript" => LangType(LanguageType::LiveScript),
      "Logtalk" => LangType(LanguageType::Logtalk),
      "Lua" => LangType(LanguageType::Lua),
      "Lucius" => LangType(LanguageType::Lucius),
      "Madlang" => LangType(LanguageType::Madlang),
      "Makefile" => LangType(LanguageType::Makefile),
      "Markdown" => LangType(LanguageType::Markdown),
      "Meson" => LangType(LanguageType::Meson),
      "Mint" => LangType(LanguageType::Mint),
      "ModuleDef" => LangType(LanguageType::ModuleDef),
      "MoonScript" => LangType(LanguageType::MoonScript),
      "MsBuild" => LangType(LanguageType::MsBuild),
      "Mustache" => LangType(LanguageType::Mustache),
      "Nim" => LangType(LanguageType::Nim),
      "Nix" => LangType(LanguageType::Nix),
      "NotQuitePerl" => LangType(LanguageType::NotQuitePerl),
      "OCaml" => LangType(LanguageType::OCaml),
      "ObjectiveC" => LangType(LanguageType::ObjectiveC),
      "ObjectiveCpp" => LangType(LanguageType::ObjectiveCpp),
      "Odin" => LangType(LanguageType::Odin),
      "OpenType" => LangType(LanguageType::OpenType),
      "Org" => LangType(LanguageType::Org),
      "Oz" => LangType(LanguageType::Oz),
      "PSL" => LangType(LanguageType::PSL),
      "Pan" => LangType(LanguageType::Pan),
      "Pascal" => LangType(LanguageType::Pascal),
      "Perl" => LangType(LanguageType::Perl),
      "Perl6" => LangType(LanguageType::Perl6),
      "Pest" => LangType(LanguageType::Pest),
      "Php" => LangType(LanguageType::Php),
      "Polly" => LangType(LanguageType::Polly),
      "Pony" => LangType(LanguageType::Pony),
      "PostCss" => LangType(LanguageType::PostCss),
      "PowerShell" => LangType(LanguageType::PowerShell),
      "Processing" => LangType(LanguageType::Processing),
      "Prolog" => LangType(LanguageType::Prolog),
      "Protobuf" => LangType(LanguageType::Protobuf),
      "Pug" => LangType(LanguageType::Pug),
      "PureScript" => LangType(LanguageType::PureScript),
      "Python" => LangType(LanguageType::Python),
      "Q" => LangType(LanguageType::Q),
      "Qcl" => LangType(LanguageType::Qcl),
      "Qml" => LangType(LanguageType::Qml),
      "R" => LangType(LanguageType::R),
      "RON" => LangType(LanguageType::RON),
      "RPMSpecfile" => LangType(LanguageType::RPMSpecfile),
      "Racket" => LangType(LanguageType::Racket),
      "Rakefile" => LangType(LanguageType::Rakefile),
      "Razor" => LangType(LanguageType::Razor),
      "ReStructuredText" => LangType(LanguageType::ReStructuredText),
      "Renpy" => LangType(LanguageType::Renpy),
      "Ruby" => LangType(LanguageType::Ruby),
      "RubyHtml" => LangType(LanguageType::RubyHtml),
      "Rust" => LangType(LanguageType::Rust),
      "SRecode" => LangType(LanguageType::SRecode),
      "Sass" => LangType(LanguageType::Sass),
      "Scala" => LangType(LanguageType::Scala),
      "Scheme" => LangType(LanguageType::Scheme),
      "Scons" => LangType(LanguageType::Scons),
      "Sh" => LangType(LanguageType::Sh),
      "Sml" => LangType(LanguageType::Sml),
      "Solidity" => LangType(LanguageType::Solidity),
      "SpecmanE" => LangType(LanguageType::SpecmanE),
      "Spice" => LangType(LanguageType::Spice),
      "Sql" => LangType(LanguageType::Sql),
      "Stan" => LangType(LanguageType::Stan),
      "Stratego" => LangType(LanguageType::Stratego),
      "Stylus" => LangType(LanguageType::Stylus),
      "Svelte" => LangType(LanguageType::Svelte),
      "Svg" => LangType(LanguageType::Svg),
      "Swift" => LangType(LanguageType::Swift),
      "Swig" => LangType(LanguageType::Swig),
      "SystemVerilog" => LangType(LanguageType::SystemVerilog),
      "Tcl" => LangType(LanguageType::Tcl),
      "Tera" => LangType(LanguageType::Tera),
      "Tex" => LangType(LanguageType::Tex),
      "Text" => LangType(LanguageType::Text),
      "Thrift" => LangType(LanguageType::Thrift),
      "Toml" => LangType(LanguageType::Toml),
      "Tsx" => LangType(LanguageType::Tsx),
      "Ttcn" => LangType(LanguageType::Ttcn),
      "Twig" => LangType(LanguageType::Twig),
      "TypeScript" => LangType(LanguageType::TypeScript),
      "UnrealDeveloperMarkdown" => LangType(LanguageType::UnrealDeveloperMarkdown),
      "UnrealPlugin" => LangType(LanguageType::UnrealPlugin),
      "UnrealProject" => LangType(LanguageType::UnrealProject),
      "UnrealScript" => LangType(LanguageType::UnrealScript),
      "UnrealShader" => LangType(LanguageType::UnrealShader),
      "UnrealShaderHeader" => LangType(LanguageType::UnrealShaderHeader),
      "UrWeb" => LangType(LanguageType::UrWeb),
      "UrWebProject" => LangType(LanguageType::UrWebProject),
      "VB6" => LangType(LanguageType::VB6),
      "VBScript" => LangType(LanguageType::VBScript),
      "Vala" => LangType(LanguageType::Vala),
      "Velocity" => LangType(LanguageType::Velocity),
      "Verilog" => LangType(LanguageType::Verilog),
      "VerilogArgsFile" => LangType(LanguageType::VerilogArgsFile),
      "Vhdl" => LangType(LanguageType::Vhdl),
      "VimScript" => LangType(LanguageType::VimScript),
      "VisualBasic" => LangType(LanguageType::VisualBasic),
      "VisualStudioProject" => LangType(LanguageType::VisualStudioProject),
      "VisualStudioSolution" => LangType(LanguageType::VisualStudioSolution),
      "Vue" => LangType(LanguageType::Vue),
      "WebAssembly" => LangType(LanguageType::WebAssembly),
      "Wolfram" => LangType(LanguageType::Wolfram),
      "XSL" => LangType(LanguageType::XSL),
      "Xaml" => LangType(LanguageType::Xaml),
      "XcodeConfig" => LangType(LanguageType::XcodeConfig),
      "Xml" => LangType(LanguageType::Xml),
      "Xtend" => LangType(LanguageType::Xtend),
      "Yaml" => LangType(LanguageType::Yaml),
      "Zig" => LangType(LanguageType::Zig),
      "Zsh" => LangType(LanguageType::Zsh),

      _ => LangType(LanguageType::Text),
    }
  }
}
