const fs = require("fs")
const path = require("path")
const lines = fs.readFileSync(path.resolve(__dirname,'./languageType.txt'), 'utf-8').split('\n');

let matchCode = "";

lines.forEach(type => {
    matchCode += `\t  "${type}" => LangType(LanguageType::${type}),\n`
})

const template = `// generated by scripts/genLang.cjs
use std::ops::Deref;
use tokei::LanguageType;
#[derive(Debug, Clone)]
pub struct LangType(LanguageType);
impl Deref for LangType {
  type Target = LanguageType;

  fn deref(&self) -> &Self::Target {
    &self.0
  }
}

impl From<&str> for LangType {
  fn from(item: &str) -> Self {
    match item {
${matchCode}
      _ => LangType(LanguageType::Text)
    }
  }
}
`

fs.writeFileSync(path.resolve(__dirname, "../src/lang.rs"), template)
